This bot facilitates Shabbat attendance tracking for synagogues through WhatsApp groups, sending automated attendance surveys with interactive buttons.
Overview

The Shabbat Attendance Bot:

    Sends scheduled attendance surveys to a WhatsApp group
    Uses interactive buttons for simple Yes/No responses
    Automatically acknowledges member responses
    Sends reminders before Shabbat services

Setup
Requirements

    Node.js (v16 or higher)
    NPM or Yarn
    A WhatsApp number for the bot
    Internet connection

Installation

    Clone the repository:
git clone https://github.com/yourusername/shabbat-attendance-bot.git
cd shabbat-attendance-bot


    Install dependencies:
npm install


    First-time setup:
npm run dev

This will generate a QR code. Scan it with your WhatsApp app to authorize the bot.

Configuration

The main configuration is in settings/config.js. Key settings:

    global.status: Set to true to make the bot active
    global.welcome: Set to true for welcome messages

The WhatsApp group ID is configured in run.js:
// Function to get the synagogue group ID
const getSynagogueGroupId = () => {
    return '120363401885808458@g.us';  // Replace with your synagogue group ID
};


Production Mode

Production mode follows the schedule for Thursdays and Fridays:
npm start

or
node index.js

Schedule

By default, the bot operates on this schedule:

    Thursday 10:00 AM: Sends attendance survey with Yes/No buttons
    Friday 12:00 PM: Sends reminder message for the service

To modify this schedule, edit these constants in run.js:
const THURSDAY_SCHEDULE = '0 10 * * 4';  // Thursday at 10 AM
const FRIDAY_SCHEDULE = '0 12 * * 5';    // Friday at 12 PM

The format is minute hour * * day-of-week where:

    0-59 for minute
    0-23 for hour
    0-7 for day of week (0 or 7 is Sunday)

Commands

Members of the group can use:

    Respond with the buttons: Yes or No
    Type "yes" or "no" (case-insensitive) as fallback

Administrators can use:

    !verify: Check if the bot is active in the group
    !test: Send a test message with buttons
    !testgroup: Test messaging to the target group
    !attendance: Manually trigger an attendance survey

Logs

Logs are stored in the logs directory. Each day creates a new log file with the format bot-YYYY-MM-DD.log.
Troubleshooting
Connection Issues

If the bot disconnects frequently:

    Check your internet connection
    Ensure WhatsApp hasn't logged out the bot
    Check the logs for specific error messages
    Restart the bot with npm start

Button Messages Not Working

If button messages don't appear:

    Ensure recipients have updated WhatsApp versions
    Try the !test command to verify button functionality
    Check if the viewOnce: true parameter is present in the message code

Rate Limiting

The bot includes rate limiting to prevent WhatsApp from flagging it as spam. In production, this shouldn't be an issue since messages are only sent twice a week.
Maintenance

The bot will:

    Automatically restart if it crashes
    Create daily log files for monitoring
    Retry failed message deliveries up to 3 times

Technical Notes

This bot uses:

    GataNina-Li/Baileys for enhanced button support
    node-cron for scheduling
    Optimized connection handling with automatic retries
    Message delivery acknowledgment

Support

For issues or assistance:

    Check the log files first
    Ensure WhatsApp authorization is current